{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GO IT\\\\test\\\\src\\\\components\\\\Header\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderWrapper, HeaderNav, HeaderButtons, LoginButton, SignupButton } from './Header.styles.js';\nimport { login, logout } from '../../redux/authAction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const location = useLocation();\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const dispatch = useDispatch();\n\n  const handleLogin = () => {\n    if (isAuthenticated) {\n      dispatch(logout());\n    } else {\n      dispatch(login());\n    }\n  };\n\n  const isLoginPage = location.pathname === '/login';\n  const isUserDashboardPage = location.pathname === '/dashboard'; // Conditionally render the entire Header component for all routes except the user dashboard page\n\n  if (isUserDashboardPage) {\n    return null; // Hide the entire Header on the user dashboard page\n  }\n\n  return /*#__PURE__*/_jsxDEV(HeaderWrapper, {\n    children: /*#__PURE__*/_jsxDEV(HeaderNav, {\n      children: isLoginPage ? null : /*#__PURE__*/_jsxDEV(HeaderButtons, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(LoginButton, {\n              onClick: handleLogin,\n              children: isAuthenticated ? 'Log Out' : 'Log In'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), isAuthenticated ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(SignupButton, {\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"aXj0FmBv+HW3/bZMqbEOOrelBr0=\", false, function () {\n  return [useLocation, useSelector, useDispatch];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/User/Desktop/GO IT/test/src/components/Header/Header.jsx"],"names":["React","Link","useLocation","useSelector","useDispatch","HeaderWrapper","HeaderNav","HeaderButtons","LoginButton","SignupButton","login","logout","Header","location","isAuthenticated","state","auth","dispatch","handleLogin","isLoginPage","pathname","isUserDashboardPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,YALF,QAMO,oBANP;AAOA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,2BAA9B;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,eAAe,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,eAAvB,CAAnC;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxB,QAAIJ,eAAJ,EAAqB;AACnBG,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,CAACP,KAAK,EAAN,CAAR;AACD;AACF,GAND;;AAQA,QAAMS,WAAW,GAAGN,QAAQ,CAACO,QAAT,KAAsB,QAA1C;AACA,QAAMC,mBAAmB,GAAGR,QAAQ,CAACO,QAAT,KAAsB,YAAlD,CAdgB,CAgBhB;;AACA,MAAIC,mBAAJ,EAAyB;AACvB,WAAO,IAAP,CADuB,CACV;AACd;;AAED,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,SAAD;AAAA,gBACGF,WAAW,GAAG,IAAH,gBACV,QAAC,aAAD;AAAA,gCACE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,OAAO,EAAED,WAAtB;AAAA,wBACGJ,eAAe,GAAG,SAAH,GAAe;AADjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGA,eAAe,GAAG,IAAH,gBACd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA,mCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7CQF,M;UACUV,W,EACOC,W,EACPC,W;;;KAHVQ,M;AA+CT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  HeaderWrapper,\r\n  HeaderNav,\r\n  HeaderButtons,\r\n  LoginButton,\r\n  SignupButton,\r\n} from './Header.styles.js';\r\nimport { login, logout } from '../../redux/authAction.js';\r\n\r\nfunction Header() {\r\n  const location = useLocation();\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = () => {\r\n    if (isAuthenticated) {\r\n      dispatch(logout());\r\n    } else {\r\n      dispatch(login());\r\n    }\r\n  };\r\n\r\n  const isLoginPage = location.pathname === '/login';\r\n  const isUserDashboardPage = location.pathname === '/dashboard';\r\n\r\n  // Conditionally render the entire Header component for all routes except the user dashboard page\r\n  if (isUserDashboardPage) {\r\n    return null; // Hide the entire Header on the user dashboard page\r\n  }\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <HeaderNav>\r\n        {isLoginPage ? null : (\r\n          <HeaderButtons>\r\n            <li>\r\n              <Link to=\"/login\">\r\n                <LoginButton onClick={handleLogin}>\r\n                  {isAuthenticated ? 'Log Out' : 'Log In'}\r\n                </LoginButton>\r\n              </Link>\r\n            </li>\r\n            {isAuthenticated ? null : (\r\n              <li>\r\n                <Link to=\"/signup\">\r\n                  <SignupButton>Sign Up</SignupButton>\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </HeaderButtons>\r\n        )}\r\n      </HeaderNav>\r\n    </HeaderWrapper>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}
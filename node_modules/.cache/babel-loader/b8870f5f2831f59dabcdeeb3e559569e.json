{"ast":null,"code":"/**\n * React Router DOM v6.17.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nlet _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n\n    if (!viewTransitionOpts || router.window == null || typeof router.window.document.startViewTransition !== \"function\") {\n      // Mid-navigation state update, or startViewTransition isn't available\n      optInStartTransition(() => setStateImpl(newState));\n    } else if (transition && renderDfd) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [optInStartTransition, transition, renderDfd, router.window]); // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]); // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext.isTransitioning]); // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]); // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]); // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement)))), null);\n}\n\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    unstable_viewTransition,\n    children\n  } = _ref8,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    submit,\n    relative,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref9,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId,\n      unstable_viewTransition: options.unstable_viewTransition\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\n\n\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0; // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref11) {\n  let {\n    when,\n    message\n  } = _ref11;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\n\n\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname; // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","START_TRANSITION","startTransitionImpl","startTransitionSafe","cb","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","unstable_viewTransitionOpts","viewTransitionOpts","startViewTransition","skipTransition","currentLocation","nextLocation","useLayoutEffect","subscribe","useEffect","renderPromise","finished","finally","location","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","DataRouterContext","Provider","DataRouterStateContext","Router","navigationType","historyAction","initialized","DataRoutes","_ref3","useRoutesImpl","BrowserRouter","_ref4","children","historyRef","useRef","current","v5Compat","listen","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","unstable_viewTransition","rest","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","renderProps","ariaCurrent","filter","Boolean","join","_extends","Form","props","submit","useSubmit","FormImpl","forwardedRef","onSubmit","_ref9","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","invariant","useDataRouterState","_temp","replaceProp","useNavigate","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","useRouteId","options","getFormSubmissionInfo","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","UseSubmitFetcher","fetch","_temp2","routeContext","RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","FetcherForm","fetcherId","useFetcher","UseFetcher","_route$matches","id","String","load","fetcher","getFetcher","fetcherWithComponents","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","callback","capture","addEventListener","removeEventListener","usePrompt","_ref11","when","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"sources":["C:\\Users\\User\\Desktop\\GO IT\\test\\node_modules\\react-router-dom\\dom.ts","C:\\Users\\User\\Desktop\\GO IT\\test\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [optInStartTransition, transition, renderDfd, router.window]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <ViewTransitionContext.Provider value={vtContext}>\n            <Router\n              basename={basename}\n              location={state.location}\n              navigationType={state.historyAction}\n              navigator={navigator}\n            >\n              {state.initialized ? (\n                <DataRoutes routes={router.routes} state={state} />\n              ) : (\n                fallbackElement\n              )}\n            </Router>\n          </ViewTransitionContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_viewTransition: options.unstable_viewTransition,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}